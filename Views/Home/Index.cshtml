@model IEnumerable<Notes_Website.Models.NoteModel>

@{
    ViewData["Title"] = "Home Page";
    IHttpContextAccessor a = new HttpContextAccessor();
    string? username = a.HttpContext?.Request.Query["uname"];

    const string CookieKeyUName = "_UserName";
    // Check if a new user name is given to store it in the cookie
    if (!string.IsNullOrEmpty(username))
    {
        a.HttpContext?.Response.Cookies.Append(CookieKeyUName, username);
    }
    else    // If no new user name is given, try to read from the cookie
        username = a.HttpContext?.Request.Cookies[CookieKeyUName];
}

<div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
    <div class="carousel-indicators">
        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
    </div>
    <div class="carousel-inner">
        <div class="carousel-item active">
            <img src="/pictures/Orange Vortex.jpg" class="d-block w-100" alt="Image1">
        </div>
        <div class="carousel-item">
            <img src="/pictures/Photo 105.jpg" class="d-block w-100" alt="Image2">
        </div>
        <div class="carousel-item">
            <img src="/pictures/Photo 27.jpg" class="d-block w-100" alt="Image3">
        </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    @*<p>Welcome to your personal online note manager application built using ASP.NET.</p>*@
    <p class="lead">
    @if (username != null)
        {
        <p>Welcome back @username <a asp-route-forgetuser='true'>Forget me.</a></p>
    }
    else
    {
        <p>Welcome to your personal online note manager application. Please sign in.</p>
        <form method="get" class="row g-3 mt-3">
        <div class="row justify-content-center">
            <div class="col-auto">
                <label for="uname" class="visually-hidden"> Your name</label>
                <input id="uname" name="uname" class="form-control" placeholder="Your Name" />
            </div>
            <div class="col-auto">
                <input type="submit" value="Apply" class="btn btn-primary mb-3" />
            </div>
        </div>
    </form>
    }

    </p>
    <p>
        @ViewBag.CurrentDate.ToString()
    </p>
</div>

<div class="row justify-content-center mb-3">
    <div class="text-center">
        <p>Number of added notes: @ViewBag.NoteCount</p>
    </div>
</div>

<div class="row justify-content-center mb-3">
    <div class="text-center">
        <p>The most recent note is:</p>
        @foreach (var item in Model)
    {
        <div class="text-center">
            <a asp-action="Details" asp-controller="NoteModels" asp-route-id="@item.Id" class="text-decoration-none text-reset">
                <div class="card shadow mb-3">
                    <div class="card-body">
                        <h4 class="card-title border-bottom"> @Html.DisplayFor(modelItem => item.Title)</h4>
                        <p class="text-muted">@Html.DisplayFor(modelItem => item.Note_Part)</p>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Note)</p>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.NoteType.Type)</p>
                        <p class="text-muted">@Html.DisplayFor(modelItem => item.Added)</p>
                    </div>
                </div>
            </a>
        </div>
    }
    </div>
</div>
